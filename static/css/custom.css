:root {
    --bs-body-bg: #000000;
    --bs-dark: #0a0a0a;
    --bs-secondary-bg: #1a1a1a;
}

/* Base transitions */
* {
    transition: all 0.2s ease-in-out;
}

.output-area {
    min-height: 200px;
    white-space: pre-wrap;
    font-family: monospace;
    position: relative;
}

/* Card animations */
.card {
    border-color: var(--bs-border-color);
    background-color: var(--bs-dark);
    transform: translateY(0);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.card-body {
    position: relative;
    transition: all 0.3s ease;
}

.like-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: transparent;
    display: none;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 2px solid transparent;
}

.like-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--bs-success);
    font-size: 1.2rem;
    font-weight: bold;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease, transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Show like overlay only when there's content */
.output-area:not(:empty):not([data-state="loading"]) ~ .like-overlay {
    display: block;
}

.output-area:not(:empty):not([data-state="loading"]) ~ .like-overlay:hover {
    background: rgba(40, 167, 69, 0.35); /* Increased opacity */
    backdrop-filter: blur(12px); /* Increased blur */
}

.output-area:not(:empty):not([data-state="loading"]) ~ .like-overlay:hover .like-text {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4); /* Increased shadow */
}

.liked {
    border-color: var(--bs-success);
    background: rgba(40, 167, 69, 0.15); /* Increased opacity */
    backdrop-filter: blur(8px); /* Increased blur */
}

.liked .like-text {
    display: none;
}

/* Button animations */
.btn {
    position: relative;
    overflow: hidden;
    transform: translateY(0);
    transition: transform 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.btn:active {
    transform: translateY(1px);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.copy-btn:hover {
    color: var(--bs-primary);
}

/* Starter button animations */
.starter-btn {
    background: var(--bs-dark);
    border: 1px solid var(--bs-border-color);
    color: var(--bs-body-color);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    font-size: 0.9rem;
    transform: scale(1);
    position: relative;
    overflow: hidden;
}

.starter-btn:hover {
    transform: translateY(-2px) scale(1.05);
    background: var(--bs-secondary-bg);
    border-color: var(--bs-primary);
    box-shadow: 0 4px 12px rgba(var(--bs-primary-rgb), 0.15);
}

.starter-btn:active {
    transform: translateY(1px) scale(0.98);
}

/* Ripple effect */
.starter-btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
}

.starter-btn:focus:not(:active)::after {
    animation: ripple 1s ease-out;
}

@keyframes ripple {
    0% {
        transform: scale(0, 0);
        opacity: 0.5;
    }
    100% {
        transform: scale(100, 100);
        opacity: 0;
    }
}

/* Input animations */
.form-control {
    transition: border-color 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}

.form-control:focus {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(var(--bs-primary-rgb), 0.15);
}

#promptInput {
    resize: vertical;
    background-color: var(--bs-dark);
}

.wordware-logo {
    height: 30px;
    opacity: 0.9;
    transition: all 0.3s ease;
    transform: translateY(0);
}

.wordware-logo:hover {
    opacity: 1;
    transform: translateY(-2px);
}

.conversation-starters {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
}

/* Copy button animations */
.bottom-copy-btn {
    position: absolute;
    bottom: 10px;
    right: 10px;
    opacity: 0;
    transition: opacity 0.3s ease, transform 0.2s ease;
}

.card:hover .bottom-copy-btn {
    opacity: 1;
}

.bottom-copy-btn:hover {
    transform: scale(1.1);
}

/* Copy success animation */
@keyframes copySuccess {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

.copy-success {
    animation: copySuccess 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background-color: var(--bs-success) !important;
    color: white !important;
}

/* FAQ Accordion animations */
.accordion {
    --bs-accordion-bg: var(--bs-dark);
    --bs-accordion-active-bg: var(--bs-secondary-bg);
    --bs-accordion-btn-bg: var(--bs-dark);
    --bs-accordion-border-color: rgba(255, 255, 255, 0.1);
}

.accordion-item {
    background-color: var(--bs-dark);
    border: 1px solid var(--bs-accordion-border-color);
    margin-bottom: 1rem;
    border-radius: 8px !important;
    overflow: hidden;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                border-color 0.3s ease,
                box-shadow 0.3s ease;
}

.accordion-item:hover {
    border-color: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.accordion-button {
    transition: background-color 0.3s ease,
                color 0.3s ease,
                box-shadow 0.3s ease;
    font-weight: 500;
    color: var(--bs-light);
    padding: 1.25rem;
    background: var(--bs-dark);
}

.accordion-button:not(.collapsed) {
    color: var(--bs-light);
    background-color: var(--bs-secondary-bg);
    transform: none;
    box-shadow: none;
}

.accordion-button:focus {
    border-color: var(--bs-primary);
    box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
}

.accordion-button::after {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.3s ease;
    opacity: 0.7;
}

.accordion-button:hover::after {
    opacity: 1;
}

.accordion-button:not(.collapsed)::after {
    transform: rotate(-180deg);
}

.accordion-body {
    padding: 1.5rem;
    background-color: var(--bs-dark);
    color: var(--bs-light);
    line-height: 1.6;
    font-size: 1rem;
}

.accordion-collapse {
    transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.accordion-collapse.collapsing {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.accordion-collapse.show {
    animation: none;
}

/* Hide like overlay when there's no content or loading */
.output-area:empty ~ .like-overlay,
.output-area[data-state="loading"] ~ .like-overlay {
    display: none !important;
}

/* Display text styles */
.display-4 {
    font-weight: 600;
}

.text-secondary {
    opacity: 0.8;
}

.lead {
    font-size: 1.1rem;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}

/* Share section animations */
#shareSection {
    transition: opacity 0.4s ease, transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

#shareSection.d-none {
    opacity: 0;
    transform: translateY(10px);
    pointer-events: none;
}

#shareSection:not(.d-none) {
    opacity: 1;
    transform: translateY(0);
    animation: slideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Loading animation */
.output-area[data-state="loading"] {
    position: relative;
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--bs-dark);
}

.output-area[data-state="loading"]::before {
    content: '';
    width: 50px;
    height: 50px;
    border: 4px solid var(--bs-secondary);
    border-radius: 50%;
    border-top-color: transparent;
    animation: loadingSpin 1s linear infinite;
    margin-bottom: 40px; /* Add space before the text */
}

.output-area[data-state="loading"]::after {
    content: 'Loading...';
    position: absolute;
    top: calc(50% + 30px);
    font-family: monospace;
    color: var(--bs-secondary);
    opacity: 0.8;
}

@keyframes loadingSpin {
    to { transform: rotate(360deg); }
}